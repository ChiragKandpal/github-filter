{"version":3,"sources":["constants/app-constants.tsx","components/repo-table/Repo-table.tsx","components/filter-sort/filter-helper.ts","components/filter-sort/filter-sort.tsx","api-auth/api-auth.ts","components/search-repo-home/search-repo.tsx","reportWebVitals.ts","components/header/header.tsx","index.tsx"],"names":["webpageConstants","webisteTitle","greetingText","owner","userameSearchLabel","errorText","repoNotPresent","applyFilter","clearFilterSort","sortBy","tableIssueTitle","tableOpenTitle","tableWatcherTitle","tableStargazerTitle","tableDescTitle","sortData","starCountText","sortDirection","sortName","RepoTable","tableArrayProps","className","map","id","data","src","avatar_url","width","height","alt","name","login","open_issues_count","watchers_count","stargazers_count","description","slice","length","filterDropdownHandle","currTarget","filterListContainerAll","document","querySelectorAll","filterListContainer","closest","querySelector","forEach","element","classList","add","toggle","FilterSort","repoResponseProp","useState","arrNew","setArrNew","repoList","setRepoList","stargazerCountList","setStargazerCountList","openIssueCountList","setOpenIssueCountList","watcherCountList","setWatcherCountList","toggleDropdown","setToggleDropdown","selectedValue","setSelectedValue","activeRepo","setActiveRepo","activeStargazerCount","setActiveStargazerCount","activeOpenIssueCount","setActiveOpenIssueCount","activeWatcherCount","setActiveWatcherCount","repoName","starCount","openCount","watcher","filterParam","setFilterParam","ref","useRef","repoResponseCurrent","useEffect","filterArray","filterPropertyName","result","a","sortResult","Array","from","Set","sort","b","handleSortDropdown","e","current","contains","target","addEventListener","removeEventListener","repoFilterHandler","Object","entries","key","value","filter","word","filterSelectHandler","event","filterType","dataset","filterName","Number","data-filter-wrapper","onClick","currentTarget","data-filter-list","data-filter-name","data-filter-type","idx","data-sort-direction","data-sort-name","listProperty","textContent","sortResultHandler","apiHandler","userName","fetch","method","response","ok","json","responseData","Error","console","error","SearchRepo","setUserName","setResponseData","apiErrorResponse","setApiErrorResponse","apiErrorMsg","setApiErrorMsg","searchRepo","getApirespose","onChange","type","placeholder","required","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63270898.chunk.js","sourcesContent":["export const webpageConstants = {\r\n  webisteTitle: `github repositery search`,\r\n  greetingText: `hello, please enter github username to begin repository search`,\r\n  owner: `-By Chirag Kandpal`,\r\n  userameSearchLabel: `github username`,\r\n  errorText: `user not found`,\r\n  repoNotPresent: `Repositories for selected filter combination are not found`,\r\n  applyFilter: `apply filters`,\r\n  clearFilterSort: `clear filters & sort`,\r\n  sortBy: `Sort By`,\r\n  tableIssueTitle: `owner:`,\r\n  tableOpenTitle: `Open issues:`,\r\n  tableWatcherTitle: `watcher:`,\r\n  tableStargazerTitle: `Stargazers`,\r\n  tableDescTitle: `description:`,\r\n\r\n  sortData: [\r\n    {\r\n      starCountText: `star count (asc)`,\r\n      sortDirection: `asc`,\r\n      sortName: `star`,\r\n    },\r\n    {\r\n      starCountText: `star count (dec)`,\r\n      sortDirection: `dec`,\r\n      sortName: `star`,\r\n    },\r\n    {\r\n      starCountText: `open issue count (asc)`,\r\n      sortDirection: `asc`,\r\n      sortName: `open`,\r\n    },\r\n    {\r\n      starCountText: `open issue count (dec)`,\r\n      sortDirection: `dec`,\r\n      sortName: `open`,\r\n    },\r\n    {\r\n      starCountText: `watcher count (asc)`,\r\n      sortDirection: `asc`,\r\n      sortName: `watcher`,\r\n    },\r\n    {\r\n      starCountText: `watcher count (dec)`,\r\n      sortDirection: `dec`,\r\n      sortName: `watcher`,\r\n    },\r\n  ],\r\n};\r\n","import {webpageConstants} from '../../constants/app-constants';\r\nimport \"./repo-table.scss\";\r\n\r\ninterface Props {\r\n  tableArrayProps: Array<any>;\r\n}\r\nconst RepoTable: React.FC<Props> = ({ tableArrayProps }: Props) => {\r\n  return (\r\n    <div className=\"repo-table__container\">\r\n      {tableArrayProps.map(({ id, ...data }) => (\r\n        <div className=\"repo-card\" key={id}>\r\n          <img\r\n            className=\"avatar-img\"\r\n            src={data.owner.avatar_url}\r\n            width=\"50\"\r\n            height=\"50\"\r\n            alt=\"owner-img\"\r\n          />\r\n          <div className=\"text-data-wrapper\">\r\n            <h4>{data.name}</h4>\r\n            <p><span>{webpageConstants.tableIssueTitle}</span> {data.owner.login ? data.owner.login : 'none'}</p>\r\n            <p>\r\n              <span>{webpageConstants.tableOpenTitle}</span> {data.open_issues_count ? data.open_issues_count : 'none'}\r\n            </p>\r\n            <p>\r\n              <span>{webpageConstants.tableWatcherTitle}</span> {data.watchers_count ? data.watchers_count : 'none'}\r\n            </p>\r\n            <p>\r\n              <span>{webpageConstants.tableStargazerTitle}</span> {data.stargazers_count ? data.stargazers_count : 'none'}\r\n            </p>\r\n            <p>\r\n              <span>{webpageConstants.tableDescTitle}</span> {data.description ? `${data.description.slice(0, 100)}${data.description.length >= 100 && `...`}` : 'none'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepoTable;\r\n","export const filterDropdownHandle = (currTarget: any) => {\r\n  const filterListContainerAll = document.querySelectorAll(\r\n    `[data-filter-list=\"filter-list\"]`\r\n  );\r\n  const filterWrapper = currTarget.closest(\r\n    `[data-filter-wrapper=\"filter-wrapper\"]`\r\n  );\r\n  const filterListContainer = filterWrapper.querySelector(\r\n    `[data-filter-list=\"filter-list\"]`\r\n  );\r\n  filterListContainerAll.forEach((element) => {\r\n    if (element !== filterListContainer) element.classList.add(\"hide\");\r\n    if (element === filterListContainer) element.classList.toggle(\"hide\");\r\n  });\r\n};\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport RepoTable from \"../repo-table/Repo-table\";\r\nimport {filterDropdownHandle} from './filter-helper';\r\nimport { webpageConstants } from \"../../constants/app-constants\";\r\nimport \"./filter-sort.scss\";\r\n\r\ninterface sortProps {\r\n  repoResponseProp: Array<any>;\r\n}\r\n\r\ninterface filterParamIntface {\r\n  repoName: null | string;\r\n  starCount: null | number;\r\n  openCount: null | number;\r\n  watcher: null | number;\r\n}\r\n\r\nconst FilterSort: React.FC<sortProps> = ({ repoResponseProp }: sortProps) => {\r\n  const [arrNew, setArrNew] = useState<Array<any>>([]);\r\n  const [repoList, setRepoList] = useState<Array<string>>([]);\r\n  const [stargazerCountList, setStargazerCountList] = useState<Array<number>>([]);\r\n  const [openIssueCountList, setOpenIssueCountList] = useState<Array<number>>([]);\r\n  const [watcherCountList, setWatcherCountList] = useState<Array<number>>([]);\r\n  const [toggleDropdown, setToggleDropdown] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState<string | null>(null);\r\n  const [activeRepo, setActiveRepo] = useState<string | null>(null);\r\n  const [activeStargazerCount, setActiveStargazerCount] = useState<string | null>(null);\r\n  const [activeOpenIssueCount, setActiveOpenIssueCount] = useState<string | null>(null);\r\n  const [activeWatcherCount, setActiveWatcherCount] = useState<string | null>(null);\r\n  const [filterParam, setFilterParam] = useState<filterParamIntface>({\r\n    repoName: null,\r\n    starCount: null,\r\n    openCount: null,\r\n    watcher: null,\r\n  });\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  let repoResponseCurrent = repoResponseProp;\r\n\r\n  // set filter object to null on username search.\r\n  useEffect(() => {\r\n    setActiveRepo(null);\r\n    setSelectedValue(null);\r\n    setActiveStargazerCount(null);\r\n    setActiveOpenIssueCount(null);\r\n    setActiveWatcherCount(null);\r\n  }, [repoResponseProp]);\r\n\r\n  useEffect(() => {\r\n    setArrNew([...repoResponseCurrent]);\r\n  }, [repoResponseProp, repoResponseCurrent]);\r\n\r\n  // push sorted and non repeatitive values i.e reponame and counts in respective arrays. \r\n  useEffect(() => {\r\n    const filterRepoNameArray = (repoName: string) => {\r\n      let result = repoResponseProp.map((a) => a[repoName]);\r\n      return result;\r\n    };\r\n\r\n    const filterArray = (filterPropertyName: string) => {\r\n      let result = repoResponseProp.map((a) => a[filterPropertyName]);\r\n      let sortResult = [...Array.from(new Set(result))];\r\n      sortResult.sort(function (a, b) {\r\n        return a - b;\r\n      });\r\n      return sortResult;\r\n    };\r\n\r\n    setRepoList(filterRepoNameArray(\"name\"));\r\n    setStargazerCountList(filterArray(\"stargazers_count\"));\r\n    setOpenIssueCountList(filterArray(\"open_issues_count\"));\r\n    setWatcherCountList(filterArray(\"watchers_count\"));\r\n  }, [repoResponseProp]);\r\n\r\n  // handle sort dropdow when clicked outside sort element.\r\n  useEffect(() => {\r\n    const handleSortDropdown = (e: any) => {\r\n      if (toggleDropdown && ref.current && !ref.current.contains(e.target)) {\r\n        setToggleDropdown(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleSortDropdown);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleSortDropdown);\r\n    };\r\n  }, [toggleDropdown]);\r\n\r\n  // get filtered array i.e repoResponseCurrent based on option selections.\r\n  const repoFilterHandler = (applyFilter: boolean) => {\r\n    if (applyFilter) {\r\n      Object.entries(filterParam).forEach(([key, value]) => {\r\n        if (value !== null) {\r\n          // eslint-disable-next-line\r\n          repoResponseCurrent = repoResponseCurrent.filter((word) => {\r\n            if (key === \"repoName\") {\r\n              return value === word.name;\r\n            }\r\n            if (key === \"starCount\") {\r\n              return value === word.stargazers_count;\r\n            }\r\n            if (key === \"openCount\") {\r\n              return value === word.open_issues_count;\r\n            }\r\n            if (key === \"watcher\") {\r\n              return value === word.watchers_count;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      setArrNew([...repoResponseCurrent]);\r\n    } else {\r\n      setFilterParam({\r\n        repoName: null,\r\n        starCount: null,\r\n        openCount: null,\r\n        watcher: null,\r\n      });\r\n      setSelectedValue(null);\r\n      setActiveRepo(null);\r\n      setActiveStargazerCount(null);\r\n      setActiveOpenIssueCount(null);\r\n      setActiveWatcherCount(null);\r\n      setArrNew([...repoResponseProp]);\r\n    }\r\n  };\r\n\r\n  // on filter option select add selecteed option to filterParam object.\r\n  const filterSelectHandler = (event: any) => {\r\n    const filterType = event.dataset.filterType;\r\n    if (filterType === \"repo-name\") {      \r\n      setFilterParam({ ...filterParam, repoName: event.dataset.filterName ? event.dataset.filterName : null });\r\n      setActiveRepo(event.dataset.filterName ? event.dataset.filterName : null);\r\n    }\r\n    if (filterType === \"stargaze\") {\r\n      setFilterParam({\r\n        ...filterParam,\r\n        starCount: event.dataset.filterName ? Number(event.dataset.filterName) : null,\r\n      });\r\n      setActiveStargazerCount(event.dataset.filterName ? event.dataset.filterName : null);\r\n    }\r\n    if (filterType === \"open-issue\") {\r\n      setFilterParam({\r\n        ...filterParam,\r\n        openCount: event.dataset.filterName ? Number(event.dataset.filterName) : null,\r\n      });\r\n      setActiveOpenIssueCount(event.dataset.filterName ? event.dataset.filterName : null);\r\n    }\r\n    if (filterType === \"watcher\") {\r\n      setFilterParam({\r\n        ...filterParam,\r\n        watcher: event.dataset.filterName ? Number(event.dataset.filterName) : null,\r\n      });\r\n      setActiveWatcherCount(event.dataset.filterName ? event.dataset.filterName : null);\r\n    }\r\n\r\n    filterDropdownHandle(event);\r\n  };\r\n\r\n  // sort ascending and descending count logic.\r\n  const sortResultHandler = (e: any) => {\r\n    repoResponseCurrent = arrNew;\r\n    const element = e.target;\r\n    const sortDirection =\r\n      element.dataset.sortDirection === \"asc\" ? true : false;\r\n    const listProperty =\r\n      element.dataset.sortName === \"star\"\r\n        ? \"stargazers_count\"\r\n        : element.dataset.sortName === \"open\"\r\n        ? \"open_issues_count\"\r\n        : element.dataset.sortName === \"watcher\"\r\n        ? \"watchers_count\"\r\n        : \"\";\r\n    repoResponseCurrent = repoResponseCurrent.sort((a, b) => {\r\n      if (sortDirection) {\r\n        return a[listProperty] - b[listProperty];\r\n      } else {\r\n        return b[listProperty] - a[listProperty];\r\n      }\r\n    });\r\n\r\n    setArrNew([...repoResponseCurrent]);\r\n    setSelectedValue(element.textContent);\r\n    setToggleDropdown(false);\r\n  };\r\n\r\n  // handle sort list dropdown on sort button click.\r\n  const sortdropDownHandler = () => {\r\n    setToggleDropdown(!toggleDropdown);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filter-sort__container\">\r\n        <div className=\"filter-sort__filter-wrapper\">\r\n          repository:{\" \"}\r\n          <div\r\n            data-filter-wrapper=\"filter-wrapper\"\r\n            className=\"filter-each-wrapper\"\r\n          >\r\n            <div\r\n              className=\"active-filter\"\r\n              onClick={(e) => filterDropdownHandle(e.currentTarget)}\r\n            >\r\n              {activeRepo ? activeRepo : `All`}\r\n            </div>\r\n            <div\r\n              data-filter-list=\"filter-list\"\r\n              className=\"filter-list-container overlap-clear hide\"\r\n            >\r\n              <div\r\n                className=\"filter-option\"\r\n                data-filter-name={null}\r\n                data-filter-type=\"repo-name\"\r\n                onClick={(e) => filterSelectHandler(e.target)}\r\n              >All</div>\r\n              {repoList &&\r\n                repoList.map((value) => (\r\n                  <div key={value}>\r\n                    <div\r\n                      className=\"filter-option\"\r\n                      data-filter-name={value}\r\n                      data-filter-type=\"repo-name\"\r\n                      onClick={(e) => filterSelectHandler(e.target)}\r\n                    >\r\n                      {value}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"count-filter\">\r\n            <div\r\n              data-filter-wrapper=\"filter-wrapper\"\r\n              className=\"filter-each-wrapper\"\r\n            >\r\n              Starsgazers:\r\n              <div\r\n                className=\"active-filter\"\r\n                onClick={(e) => filterDropdownHandle(e.currentTarget)}\r\n              >\r\n                {activeStargazerCount ? activeStargazerCount : `All`}\r\n              </div>\r\n              <div\r\n                data-filter-list=\"filter-list\"\r\n                className=\"filter-list-container hide\"\r\n              >\r\n                <div\r\n                  className=\"filter-option\"\r\n                  data-filter-name={null}\r\n                  data-filter-type=\"stargaze\"\r\n                  onClick={(e) => filterSelectHandler(e.target)}\r\n                >All</div>\r\n                {stargazerCountList &&\r\n                  stargazerCountList.map((value) => (\r\n                    <div key={value}>\r\n                      <div\r\n                        className=\"filter-option\"\r\n                        data-filter-name={value}\r\n                        data-filter-type=\"stargaze\"\r\n                        onClick={(e) => filterSelectHandler(e.target)}\r\n                      >\r\n                        {value}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n            <div\r\n              data-filter-wrapper=\"filter-wrapper\"\r\n              className=\"filter-each-wrapper\"\r\n            >\r\n              Open issues:\r\n              <div\r\n                className=\"active-filter\"\r\n                onClick={(e) => filterDropdownHandle(e.currentTarget)}\r\n              >\r\n                {activeOpenIssueCount ? activeOpenIssueCount : `All`}\r\n              </div>\r\n              <div\r\n                data-filter-list=\"filter-list\"\r\n                className=\"filter-list-container hide\"\r\n              >\r\n                <div\r\n                  className=\"filter-option\"\r\n                  data-filter-name={null}\r\n                  data-filter-type=\"open-issue\"\r\n                  onClick={(e) => filterSelectHandler(e.target)}\r\n                >All</div>\r\n                {openIssueCountList &&\r\n                  openIssueCountList.map((value) => (\r\n                    <div key={value}>\r\n                      <div\r\n                        className=\"filter-option\"\r\n                        data-filter-name={value}\r\n                        data-filter-type=\"open-issue\"\r\n                        onClick={(e) => filterSelectHandler(e.target)}\r\n                      >\r\n                        {value}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n            <div\r\n              data-filter-wrapper=\"filter-wrapper\"\r\n              className=\"filter-each-wrapper\"\r\n            >\r\n              Watchers:\r\n              <div\r\n                className=\"active-filter\"\r\n                onClick={(e) => filterDropdownHandle(e.currentTarget)}\r\n              >\r\n                {activeWatcherCount ? activeWatcherCount : `All`}\r\n              </div>\r\n              <div\r\n                data-filter-list=\"filter-list\"\r\n                className=\"filter-list-container hide\"\r\n              >\r\n                <div\r\n                  className=\"filter-option\"\r\n                  data-filter-name={null}\r\n                  data-filter-type=\"watcher\"\r\n                  onClick={(e) => filterSelectHandler(e.target)}\r\n                >All</div>\r\n                {watcherCountList &&\r\n                  watcherCountList.map((value) => (\r\n                    <div key={value}>\r\n                      <div\r\n                        className=\"filter-option\"\r\n                        data-filter-name={value}\r\n                        data-filter-type=\"watcher\"\r\n                        onClick={(e) => filterSelectHandler(e.target)}\r\n                      >\r\n                        {value}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"btn-blue btn-all\" onClick={() => repoFilterHandler(true)}>\r\n        {webpageConstants.applyFilter}\r\n        </button>\r\n        <button className=\"btn-clear btn-all\" onClick={() => repoFilterHandler(false)}>\r\n        {webpageConstants.clearFilterSort}\r\n        </button>\r\n\r\n        {arrNew.length > 0 && (\r\n          <div className=\"filter-sort__sort-wrapper\">\r\n            {webpageConstants.sortBy}\r\n            <div className=\"sort-body\" ref={ref}\r\n            onClick={sortdropDownHandler}>\r\n              <div className=\"current-sort js-selected-sort\">\r\n                {selectedValue ? selectedValue : `None`}\r\n              </div>\r\n              {toggleDropdown && (\r\n                <ul className=\"sort-list\">\r\n                  <li>\r\n                      {webpageConstants.sortData.map(({starCountText, sortDirection, sortName}, idx) => (\r\n                        <div key={idx}\r\n                          data-sort-direction={sortDirection}\r\n                          data-sort-name={sortName}\r\n                          onClick={(e) => sortResultHandler(e)}\r\n                        >\r\n                          {starCountText}\r\n                        </div>\r\n                      ))}\r\n                  </li>\r\n                </ul>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {arrNew.length > 0 ? (\r\n        <RepoTable tableArrayProps={arrNew} />\r\n      ) : (\r\n        <div className=\"filter-error-msg\">{webpageConstants.repoNotPresent}</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterSort;\r\n","export const apiHandler = async (userName: string) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://api.github.com/users/${userName}/repos`, {method: \"GET\",}\r\n    );\r\n\r\n    if (response.ok) {\r\n      const responseData = await response.json();\r\n      if (responseData.length > 0) {\r\n        return responseData;\r\n      } else {\r\n        return 0;\r\n      }\r\n    } else {\r\n      throw new Error(\"user does not exist\");\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    return -1;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport FilterSort from \"../filter-sort/filter-sort\";\nimport { webpageConstants } from \"../../constants/app-constants\";\nimport { apiHandler } from \"../../api-auth/api-auth\";\nimport \"./search-repo.scss\";\n\nconst SearchRepo: React.FC = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [responseData, setResponseData] = useState<Array<any>>([]);\n  const [apiErrorResponse, setApiErrorResponse] = useState<boolean>(false);\n  const [apiErrorMsg, setApiErrorMsg] = useState<string>(\"\");\n\n  // if no username then reset the array as empty.\n  useEffect(() => {\n    if (!userName) setResponseData([]);\n  }, [userName]);\n\n  // pass username and trigger API call and get response.\n  const searchRepo = async () => {\n    const getApirespose = await apiHandler(userName);\n    if (getApirespose.length > 0) {\n      setResponseData(getApirespose);\n      setApiErrorResponse(false);\n    } else if (getApirespose === 0) {\n      setResponseData([]);\n      setApiErrorMsg(`No repository found the user: ${userName}`);\n      setApiErrorResponse(true);\n    } else if (getApirespose === -1) {\n      setResponseData([]);\n      setApiErrorMsg(`invalid username`);\n      setApiErrorResponse(true);\n    }\n  };\n\n  // clear repository search on clear button click.\n  const clearSearch = () => {\n    setUserName(\"\");\n    setApiErrorResponse(false);\n    setResponseData([]);\n  };\n  return (\n    <>\n      <div className=\"username-search__container\">\n        <div className=\"search-label\">\n          <label>{webpageConstants.userameSearchLabel}</label>\n          <div>\n            <input\n              value={userName}\n              onChange={(e) => setUserName(e.target.value)}\n              type=\"text\"\n              placeholder=\"Username\"\n              required\n            />\n            <button className=\"btn-all btn-blue\" onClick={searchRepo}>\n              Search\n            </button>\n            {userName && (\n              <button className=\"btn-all btn-clear\" onClick={clearSearch}>\n                Clear\n              </button>\n            )}\n          </div>\n        </div>\n        {userName.length <= 0 && (\n          <div className=\"start-page-text\">\n            <p>{webpageConstants.greetingText}</p>\n            <p>{webpageConstants.owner}</p>\n          </div>\n        )}\n        {apiErrorResponse && (\n          <div className=\"start-page-text\">{apiErrorMsg}</div>\n        )}\n      </div>\n      {responseData.length > 0 && (\n        <FilterSort repoResponseProp={responseData} />\n      )}\n    </>\n  );\n};\n\nexport default SearchRepo;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { webpageConstants } from \"../../constants/app-constants\";\r\nimport \"./header.scss\";\r\n\r\nconst Header = () => {\r\n  return <h1 className=\"title\">{webpageConstants.webisteTitle}</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SearchRepo from './components/search-repo-home/search-repo';\nimport reportWebVitals from './reportWebVitals';\nimport Header from './components/header/header';\nimport './style/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <SearchRepo />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}